set -e

ROOT_CRATE_NAME="$1"
ROOT_CRATE_VERSION="$2"
CRATE_INDEX_REPO="$3"

echo "Finding $ROOT_CRATE_NAME-$ROOT_CRATE_VERSION in $CRATE_INDEX_REPO"

function crate_to_path() {
    crate="$1"

    name_len=${#crate}

    if [ $name_len == 1 ]; then
        echo "1/${crate}"
    elif [ $name_len == 2 ]; then
        echo "2/${crate}"
    elif [ $name_len == 3 ]; then
        echo "3/${crate:0:1}/${crate}"
    else
        echo "${crate:0:2}/${crate:2:2}/${crate}"
    fi
}

function assert_eq() {
    a="$1"
    b="$2"

    if [ "$a" != "$b" ]; then
        echo "Assertion failure. '${a}'' != '${b}'"
        exit 1
    fi
}

function test_crate_to_path() {
    assert_eq $(crate_to_path atty) "at/ty/atty"
    assert_eq $(crate_to_path aabb) "aa/bb/aabb"
    assert_eq $(crate_to_path a) "1/a"
    assert_eq $(crate_to_path ab) "2/ab"
    assert_eq $(crate_to_path aac) "3/a/aac"
}

test_crate_to_path

crate_path_in_index="$(crate_to_path "${ROOT_CRATE_NAME}")"
echo "relative path for ${ROOT_CRATE_NAME} is ${crate_path_in_index}"


# Parse for version

# Grab deps

# Print deps

# Go back to search for deps